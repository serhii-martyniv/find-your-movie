{"version":3,"sources":["components/footer/index.js","components/logo/index.js","components/erros/404.js","components/header/addMovieButton/index.js","components/header/searchBar/index.js","components/modals/index.js","components/modals/AddFilmModal.js","components/header/Header.js","api/Api.js","modules/movies-reducer.js","components/header/HeaderContainer.js","components/movieList/movieItem/index.js","components/movieList/movieCount/index.js","components/movieList/movieBar/index.js","components/modals/EditFilmModal.js","components/modals/DeleteFilmModal.js","components/hooks/changeDisplayHook.js","components/erros/NoMoviesFound.js","components/movieList/MovieSort.js","components/movieList/MovieList.js","components/movieList/MovieListContainer.js","components/movieDetails/index.js","components/movieDetails/MovieDetailsContainer.js","App.js","modules/index.js","modules/configureStore.js","index.js"],"names":["props","className","children","Logo","handleShow","onClick","useState","searchValue","setSearchValue","type","placeholder","onChange","e","target","value","to","pathname","Modal","handleClose","show","showHideClassName","href","formik","useFormik","initialValues","title","year","url","genre","overview","runtime","validate","values","errors","length","startsWith","onSubmit","onAddMovie","handleSubmit","htmlFor","id","name","handleChange","Header","setShow","showModal","hideModal","deletedMovie","addMovie","Slogan","TopBar","logo","AddFilmModal","ref","refItem","a","fetch","response","json","ADD_MOVIE","UPDATE_MOVIE","DELETE_MOVIE","SET_SORT","SET_FILTER","SET_ACTIVE_MOVIE_ID","FETCH_MOVIES","GET_MOVIE","SET_MOVIES","initialState","activeMovieId","categories","movieList","sort","filter","moviesReducer","state","action","newMovie","movies","updatedMovielist","map","movie","image","alt","updatedMovie","updatedMovieList","movieId","addMovieActionCreator","setMoviesThunkCreator","dispatch","getMovies","then","data","connect","store","movieActionClasses","showMovieActions","showModalEdit","showModalDelete","movieItem","src","count","onUpdateMovie","onDeleteMovie","useChangeDisplay","refOne","refTwo","current","style","display","onChangeSort","MovieList","useParams","search","editAction","setEditAction","deleteAction","setDeleteAction","movieActions","setMovieActions","activeLink","setActiveLink","setMovies","onUpdateMovieId","updateMovieId","onChangeFilter","changeFilter","closeModal","deleteMovie","updateMovie","useEffect","useCallback","renderMovieList","useMemo","indexOf","b","details","refMovieDetails","refHeader","renderModals","EditFilmModal","activeMovie","DeleteFilmModal","countText","category","classes","MovieSort","changeSort","MovieListContainer","this","React","Component","sortName","updateSort","filterName","updateFilter","updateMovieActionCreator","deleteMovieActionCreator","updateMovieIdActionCreator","description","MovieDetailsContainer","params","useSelector","find","App","exact","path","HeaderContainer","component","NotFound","rootReducer","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c5b8212.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.scss\"\n\nexport default (props) => <div className=\"footer\">{props.children}</div>\n\n","import React from \"react\";\nimport \"./index.scss\"\nimport PropTypes from \"prop-types\";\n\nexport default function Logo () {\n    return (\n        <div className=\"logo\">\n            <strong>netflix</strong><span>roulette</span>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default (props) => <div className=\"error\">404</div>\n\n","import React from \"react\";\nimport \"./index.scss\"\n\nexport default ({handleShow}) => <><a className=\"addMovieButton\" onClick={handleShow}>+ add movie</a></>\n\n","import React, {useState} from \"react\";\nimport \"./index.scss\"\nimport {\n    Link,\n} from \"react-router-dom\";\n\nexport default () => {\n    const [searchValue, setSearchValue] = useState('');\n    let onChangeSearchValue = (e) => {\n        setSearchValue(e.target.value)\n    }\n    return(\n        <div className=\"search\">\n            <input type=\"text\" placeholder=\"What do you want to watch?\" onChange={onChangeSearchValue} />\n            <Link className=\"searchButton\" to={\n                {\n                    pathname:  searchValue ? `/find-your-movie/search/${searchValue}` : '/find-your-movie/',\n                }\n            }>Search</Link>\n        </div>\n    )\n}\n","import React from \"react\";\nimport \"./index.scss\";\n\nconst Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n\n    return (\n        <div className={showHideClassName}>\n            <section className=\"modal-main\">\n                <a className=\"closeModal\" onClick={handleClose} href=\"#\">X</a>\n                {children}\n            </section>\n        </div>\n    );\n};\n\nexport default Modal","import React from \"react\"\nimport { useFormik } from \"formik\"\n\nexport default (props) => {\n    const validate = values => {\n        const errors = {};\n        if (!values.title) {\n          errors.title = 'Required';\n        } else if (values.title.length > 15) {\n          errors.title = 'Must be 15 characters or less';\n        }\n      \n        if (!values.url) {\n          errors.url = 'Required';\n        } else if (!values.url.startsWith('/')) {\n          errors.url = 'The url mast start with /';\n        }\n      \n        return errors;\n      };\n    const formik = useFormik({\n        initialValues: {\n            title: '',\n            year: '',\n            url: '',\n            genre: '',\n            overview: '',\n            runtime: '',\n        },\n        validate,\n        onSubmit: values => {\n            props.onAddMovie(values);\n        }\n    \n    });\n    return (\n        <>\n            <h1>add movie</h1>\n            <form onSubmit={formik.handleSubmit}>\n                    {formik.errors.title ? <div>{formik.errors.title}</div> : null}\n                    <label htmlFor=\"title\">\n                        Title\n                        <input id=\"title\" name=\"title\" value={formik.values.title} onChange={formik.handleChange}/>\n                    </label>\n\n                    <label htmlFor=\"year\">\n                        release date\n                        <input id=\"year\" type=\"date\" name=\"year\" value={formik.values.year} onChange={formik.handleChange}/>\n                    </label>\n                    {formik.errors.url ? <div>{formik.errors.url}</div> : null}\n                    <label htmlFor=\"url\">\n                        movie url\n                        <input id=\"url\" name=\"url\" value={formik.values.url} onChange={formik.handleChange}/>\n                    </label>\n\n                    <label htmlFor=\"genre\">\n                        genre\n                        <select id=\"genre\" value={formik.values.genre} name=\"genre\" onChange={formik.handleChange}>\n                            <option>Select genre</option>\n                            <option>comedy</option>\n                        </select>\n                    </label>\n\n                    <label htmlFor=\"overview\">\n                        Overview\n                        <input id=\"overview\" name=\"overview\" value={formik.values.overview} placeholder=\"Overview here\" onChange={formik.handleChange}/>\n                    </label>\n                    <label htmlFor=\"runtime\">\n                        Runtime\n                        <input id=\"runtime\" name=\"runtime\" value={formik.values.runtime} placeholder=\"Runtime here\" onChange={formik.handleChange}/>\n                    </label>\n\n                    <div className=\"actions\">\n                        <a className=\"reset\">Reset</a>\n                        <button className=\"save\" type=\"submit\">Submit</button>\n                    </div>\n\n                </form>\n\n        </>\n    )\n}","import React, {useState} from \"react\";\nimport AddMovieButton from \"./addMovieButton\";\nimport SearchBar from \"./searchBar\";\nimport \"./index.scss\"\nimport PropTypes from \"prop-types\"\nimport Modal from \"../modals\"\nimport AddFilmModal from \"../modals/AddFilmModal\"\n\nconst Header = (props) => {\n    const [show, setShow] = useState(false)\n\n    const showModal = () => {\n        setShow(true)\n    };\n\n    const hideModal = () => {\n        setShow(false)\n    };\n    let onAddMovie = (deletedMovie) => {\n        props.addMovie(deletedMovie)\n    }\n    const Slogan = () => <h1 className=\"slogan\">find your movie</h1>\n    const TopBar = () => {\n        return (\n            <div className=\"topBar\">\n                {props.logo}\n                <AddMovieButton handleShow={showModal}/>\n\n                <Modal show={show} handleClose={hideModal}>\n                    <AddFilmModal onAddMovie={onAddMovie}/>\n                </Modal>\n            </div>\n        )\n    }\n\n    return(\n        <div className=\"header container\" ref={props.refItem}>\n            <TopBar />\n            <Slogan />\n            <SearchBar/>\n        </div>\n    )\n}\n\nHeader.propTypes = {\n    slogan: PropTypes.string,\n    logo: PropTypes.object.isRequired\n}\n\nexport default Header\n","import React from \"react\";\n\nexport async function getMovies() {\n    const response = await fetch(`https://my-json-server.typicode.com/serhii-martyniv/find-your-movie/movieList`)\n\n    return response.json()\n}","import {getMovies} from \"../api/Api\";\n\nconst ADD_MOVIE = \"ADD-MOVIE\";\nconst UPDATE_MOVIE = \"UPDATE-MOVIE\";\nconst DELETE_MOVIE = \"DELETE-MOVIE\";\nconst SET_SORT = \"SET-SORT\";\nconst SET_FILTER = \"SET-FILTER\";\nconst SET_ACTIVE_MOVIE_ID = \"SET-ACTIVE-MOVIE-ID\";\nconst FETCH_MOVIES = \"FETCH-MOVIES\";\nconst GET_MOVIE = \"GET_MOVIE\";\nconst SET_MOVIES = \"SET_MOVIES\";\n\nlet initialState = {\n    activeMovieId: '',\n    categories: [\n        'all', 'comedy', 'crime', 'drama'\n    ],\n    movieList: [],\n    sort: 'year',\n    filter: 'all',\n}\n\nexport const moviesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_MOVIES:\n            return {\n                ...state,\n            };\n        case GET_MOVIE:\n            return {\n                ...state,\n            };\n        case ADD_MOVIE:\n            let newMovie = {\n                id: state.movieList.length + 1,\n                title: action.newMovie.title,\n                year: action.newMovie.year,\n                genre: action.newMovie.genre,\n                overview: action.newMovie.overview,\n                runtime: action.newMovie.runtime,\n            };\n            return {\n                ...state,\n                movieList: [...state.movieList, newMovie]\n            }\n        case SET_MOVIES:\n            return {...state, movieList: action.movies}\n        case UPDATE_MOVIE:\n            let updatedMovielist = state.movieList.map((movie) => {\n                if (movie.id === state.activeMovieId) {\n                    return {\n                        id: movie.id,\n                        image: movie.image,\n                        alt: movie.alt,\n                        title: action.updatedMovie.title,\n                        year: action.updatedMovie.year,\n                        genre: action.updatedMovie.genre,\n                        overview: action.updatedMovie.overview,\n                        url: action.updatedMovie.url,\n                        runtime: action.updatedMovie.runtime,\n                    }\n                }\n                else {\n                    return movie\n                }\n            })\n            return {\n                ...state,\n                movieList: updatedMovielist\n            }\n        case DELETE_MOVIE:\n            let updatedMovieList = state.movieList.filter((movie) => movie.id !== state.activeMovieId);\n\n            return {\n                ...state,\n                movieList: updatedMovieList\n            }\n        case SET_SORT:\n            return {\n                ...state,\n                sort: action.sort\n            }\n        case SET_ACTIVE_MOVIE_ID:\n            return {\n                ...state,\n                activeMovieId: action.movieId\n            }\n        case SET_FILTER:\n            return {\n                ...state,\n                filter: action.filter\n            }\n        default:\n            return state\n    }\n\n}\n\nexport const updateSort = (sortName) => ({ type: SET_SORT, sort: sortName });\nexport const updateMovieIdActionCreator = (movieId) => ({ type: SET_ACTIVE_MOVIE_ID, movieId: movieId });\nexport const fetchMovies = () => ({\n    type: FETCH_MOVIES,\n});\nexport const updateFilter = (filterName) => ({ type: SET_FILTER, filter: filterName });\nexport const updateMovieActionCreator = (updatedMovie) => ({ type: UPDATE_MOVIE, updatedMovie });\nexport const addMovieActionCreator = (newMovie) => ({ type: ADD_MOVIE, newMovie: newMovie });\nexport const getMovieActionCreator = (movieId) => ({type: GET_MOVIE, movieId})\nexport const deleteMovieActionCreator = (movieId) => ({ type: DELETE_MOVIE, movieId });\nexport const setMoviesActionCreator = (movies) => ({ type: SET_MOVIES, movies });\n\nexport const setMoviesThunkCreator = () => {\n    return (dispatch) => {\n        getMovies().then((data) => {\n            dispatch(setMoviesActionCreator(data))\n        })\n    }\n}\n\nexport default moviesReducer","import Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {addMovieActionCreator} from \"../../modules/movies-reducer\"\n\nconst mapStateToProps = (store) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addMovie: (newMovie) => {\n            dispatch(addMovieActionCreator(newMovie))\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React from \"react\";\nimport \"./index.scss\"\n\nimport {\n    Link,\n} from \"react-router-dom\";\n\nexport default (props) => {\n    return(\n        <div className=\"movieItem\">\n            <div className={props.movieActionClasses} onClick={props.showMovieActions}>\n                <div onClick={props.showModalEdit}>Edit</div>\n                <div onClick={props.showModalDelete}>Delete</div>\n            </div>\n            <Link to={\n                {\n                    pathname: `/find-your-movie/film/${props.movieItem.id}`,\n                }\n        }>\n                 <img src={props.movieItem.image} />\n            </Link>\n           <div className=\"description\">\n               <div className=\"col\">\n                   <h4>{props.movieItem.title}</h4>\n                   <p>{props.movieItem.genre}</p>\n               </div>\n               <div className=\"col\">\n                   <div className=\"year\">{props.movieItem.year}</div>\n               </div>\n           </div>\n        </div>\n    )\n}\n","import React from \"react\";\n\nexport default (props) => <>{props.count}</>\n\n","import React from \"react\";\nimport \"./index.scss\"\n\nexport default (props) => <div className=\"movieBarWrapper\">{props.children}</div>","import React from \"react\"\nimport { useFormik } from \"formik\"\n\nexport default (props) => {\n    const validate = values => {\n        const errors = {};\n        if (!values.title) {\n          errors.title = 'Required';\n        } else if (values.title.length > 15) {\n          errors.title = 'Must be 15 characters or less';\n        }\n      \n        if (!values.url) {\n          errors.url = 'Required';\n        } else if (!values.url.startsWith('/')) {\n          errors.url = 'The url mast start with /';\n        }\n      \n        return errors;\n      };\n    const formik = useFormik({\n        initialValues: {\n            title:  '',\n            year:  '',\n            genre:  '',\n            overview:  '',\n            runtime:  '',\n        },\n        validate,\n        onSubmit: values => {\n            props.onUpdateMovie(values);\n        }\n    \n    });\n    return (\n        <>\n            <h1>Edit movie</h1>\n            <form onSubmit={formik.handleSubmit}>\n                    {formik.errors.title ? <div>{formik.errors.title}</div> : null}\n                    <label htmlFor=\"edit-title\">\n                        Title\n                        <input id=\"edit-title\" name=\"title\" value={formik.values.title} onChange={formik.handleChange}/>\n                    </label>\n\n                    <label htmlFor=\"year\">\n                        release date\n                        <input id=\"edit-year\" type=\"date\" name=\"year\" value={formik.values.year} onChange={formik.handleChange}/>\n                    </label>\n                    {formik.errors.url ? <div>{formik.errors.url}</div> : null}\n                    <label htmlFor=\"edit-url\">\n                        movie url\n                        <input id=\"edit-url\" name=\"url\" value={formik.values.url} onChange={formik.handleChange}/>\n                    </label>\n\n                    <label htmlFor=\"edit-genre\">\n                        genre\n                        <select id=\"edit-genre\" value={formik.values.genre} name=\"genre\" onChange={formik.handleChange}>\n                            <option>Select genre</option>\n                            <option>comedy</option>\n                        </select>\n                    </label>\n\n                    <label htmlFor=\"edit-overview\">\n                        Overview\n                        <input id=\"edit-overview\" name=\"overview\" value={formik.values.overview} placeholder=\"Overview here\" onChange={formik.handleChange}/>\n                    </label>\n                    <label htmlFor=\"edit-runtime\">\n                        Runtime\n                        <input id=\"edit-runtime\" name=\"runtime\" value={formik.values.runtime} placeholder=\"Runtime here\" onChange={formik.handleChange}/>\n                    </label>\n\n                    <div className=\"actions\">\n                        <a className=\"reset\">Reset</a>\n                        <button className=\"save\" type=\"submit\">Submit</button>\n                    </div>\n\n                </form>\n\n        </>\n    )\n}","import React from \"react\"\n\nexport default (props) => {\n    return (\n        <>\n            <h1>Delete movie</h1>\n\n            <label>\n                Are you sure you want to delete this movie?\n            </label>\n\n            <div className=\"actions\">\n                <div className=\"save\" onClick={props.onDeleteMovie}>Confirm</div>\n            </div>\n        </>\n    )\n}","export function useChangeDisplay (value = false, refOne, refTwo) {\n    if (value) {\n        refOne.current.style.display = 'block'\n        refTwo.current.style.display = 'none'\n    }\n    else {\n        refOne.current.style.display = 'none'\n        refTwo.current.style.display = 'block'\n    }\n\n}","import React from \"react\";\n\nexport default (props) => <div className=\"error\">No Movies Found</div>\n\n","import React from \"react\"\n\nexport default (props) => {\n    return (\n        <div className=\"filterWrapper\">\n            <span>sort by</span>\n            <select onChange={props.onChangeSort}>\n                <option value=\"genre\">Genre</option>\n                <option value=\"year\">Release date</option>\n                <option value=\"title\">Title</option>\n            </select>\n        </div>\n    )\n}","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport MovieItem from \"./movieItem\";\nimport MovieCount from \"./movieCount\";\nimport MovieBar from \"./movieBar\";\nimport \"./index.scss\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"../modals\";\nimport EditFilmModal from \"../modals/EditFilmModal\"\nimport DeleteFilmModal from \"../modals/DeleteFilmModal\"\nimport { useChangeDisplay } from \"../hooks/changeDisplayHook\"\nimport NoMovieFound from \"../erros/NoMoviesFound\"\nimport MovieSort from \"./MovieSort\"\nimport {\n    useParams,\n} from \"react-router-dom\";\n\nconst MovieList = (props) => {\n    let searchValue = useParams().search;\n    const [editAction, setEditAction] = useState(false);\n    const [deleteAction, setDeleteAction] = useState(false);\n    const [movieActions, setMovieActions] = useState(false);\n    const [activeLink, setActiveLink] = useState(null);\n    const [movies, setMovies] = useState([]);\n\n    const showMovieActions = (value, id) => {\n        setMovieActions(!value);\n        setActiveLink(id);\n    }\n    function showModalEdit(id) {\n        onUpdateMovieId(id)\n        setEditAction(true);\n    }\n    function showModalDelete(id) {\n        onUpdateMovieId(id)\n        setDeleteAction(true);\n    }\n\n    let onUpdateMovieId = (movieId) => {\n        props.updateMovieId(movieId)\n    }\n\n    let onChangeSort = (e) => {\n        props.changeSort(e.target.value);\n    }\n\n    let onChangeFilter = (e) => {\n        props.changeFilter(e.target.name);\n    }\n\n    let onDeleteMovie = (deletedMovie) => {\n        closeModal()\n        props.deleteMovie(deletedMovie)\n    }\n\n    let onUpdateMovie = (updatedMovie) => {\n        closeModal()\n        props.updateMovie(updatedMovie)\n    }\n\n    let sort = props.sort;\n    let filter = props.filter;\n    \n    useEffect(() => {\n        setMovies(props.movies)\n    }, [props.movies])\n\n    const closeModal = useCallback(() => {\n        setEditAction(false);\n        setDeleteAction(false);\n    }, [])\n\n    // Movie list render\n    let renderMovieList = useMemo(() => movies.filter((movie) => {\n        if (searchValue) {\n            if (movie.title.indexOf(searchValue) !== -1) {\n                return movie\n            }\n        }\n        else {\n            return movie\n        }\n    }).filter((movie) => {\n        if (filter === 'all') {\n            return movie\n        }\n        else if (movie.genre === filter) {\n            return movie\n        }\n    }).sort((a, b) => {\n        if (sort === 'year') {\n            return (\n                a.year > b.year ? 1 : -1\n            )\n        }\n        if (sort === 'title') {\n            return (\n                a.title > b.title ? 1 : -1\n            )\n        }\n        if (sort === 'genre') {\n            return (\n                a.genre > b.genre ? 1 : -1\n            )\n        }\n    }).map((movie) => {\n        let movieActionClasses = movieActions && movie.id === activeLink ? \"dots display-block\" : \"dots display-none\";\n        return (\n            <MovieItem key={movie.id} movieItem={movie}\n                showModalDelete={() => showModalDelete(movie.id)}\n                showModalEdit={() => showModalEdit(movie.id)}\n                showMovieActions={() =>\n                    showMovieActions(movieActions, movie.id)}\n                movieActionClasses={movieActionClasses}\n                details={useChangeDisplay}\n                refMovieDetails={props.refMovieDetails}\n                refHeader={props.refHeader}\n            />\n\n        )\n    }), [movies, movieActions, activeLink, sort, filter, searchValue]);\n\n    // Render modal windows\n    const renderModals = useMemo(() => {\n        return (\n            <>\n                <Modal show={editAction} handleClose={closeModal}>\n                    <EditFilmModal activeMovie={props.activeMovieId} onUpdateMovie={onUpdateMovie} />\n                </Modal>\n                <Modal show={deleteAction} handleClose={closeModal}>\n                    <DeleteFilmModal activeMovie={props.activeMovieId} onDeleteMovie={onDeleteMovie} />\n                </Modal>\n            </>\n        )\n    }, [editAction, deleteAction, props.activeMovieId])\n\n    // Top bar renderer\n    let countText = '';\n    let categories = '';\n    if (renderMovieList.length < 1) {\n        renderMovieList = <NoMovieFound />\n    }\n    else {\n        let count = <strong>{renderMovieList.length}</strong>;\n        countText = movies.length > 1 ? <>{count} <span>movies found</span></> : <>{count} <span>movie found</span></>\n        let id = -1;\n        categories = props.categories.map((category) => {\n            id++;\n            let classes = category === filter ? 'category-item active' : 'category-item'\n            return (\n                <a key={id} name={category} className={classes} onClick={onChangeFilter} href=\"#\">{category}</a>\n            )\n        })\n    }\n\n    return (\n        <div className=\"movieList container\">\n            {renderModals}\n            <MovieBar>\n                <div className=\"categoriesWrapper\">{categories}</div>\n                <MovieSort onChangeSort={onChangeSort}/>\n            </MovieBar>\n            <MovieCount count={countText} />\n            <div className=\"movieListWrapper\">{renderMovieList}</div>\n        </div>\n    )\n}\n\nMovieList.propTypes = {\n    categories: PropTypes.array.isRequired,\n    movies: PropTypes.array.isRequired,\n}\n\nexport default MovieList\n","import MovieList from \"./MovieList\";\nimport {connect} from \"react-redux\";\nimport {\n    updateSort,\n    updateFilter,\n    updateMovieActionCreator,\n    addMovieActionCreator,\n    deleteMovieActionCreator,\n    updateMovieIdActionCreator,\n    setMoviesThunkCreator\n} from \"../../modules/movies-reducer\"\nimport React from \"react\";\n\nclass MovieListContainer extends React.Component{\n\n    componentDidMount() {\n        this.props.setMovies()\n    }\n\n    render() {\n        return <MovieList {...this.props}/>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        movies:state.movies.movieList,\n        categories: state.movies.categories,\n        sort: state.movies.sort,\n        filter: state.movies.filter,\n        activeMovieId: state.movies.activeMovieId,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeSort: (sortName) => {\n            dispatch(updateSort(sortName))\n        },\n        changeFilter: (filterName) => {\n            dispatch(updateFilter(filterName))\n        },\n        updateMovie: (updatedMovie) => {\n            dispatch(updateMovieActionCreator(updatedMovie))\n        },\n        addMovie: (newMovie) => {\n            dispatch(addMovieActionCreator(newMovie))\n        },\n        deleteMovie: (movieId) => {\n            dispatch(deleteMovieActionCreator(movieId))\n        },\n        updateMovieId: (movieId) => {\n            dispatch(updateMovieIdActionCreator(movieId))\n        },\n        setMovies: () => {\n            dispatch(setMoviesThunkCreator())\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieListContainer)","import React, {useState} from \"react\";\nimport \"./index.scss\"\n// import img from \"../../movie_1.jpg\";\n// This hook from previous task and now its not used.\nimport {useChangeDisplay} from \"../hooks/changeDisplayHook\"\nimport {\n    Link\n} from \"react-router-dom\";\n\nexport default (props) => {\n\n    return(\n        <div className=\"movieDetails container\">\n            {props.movie && <div>\n                <div className='headerMovieDetail'>\n                    {props.logo}\n                    <Link to=\"/find-your-movie/\">Search </Link>\n                </div>\n                <div className=\"row\">\n                    <img src={props.movie.image} alt={props.movie.alt}/>\n                    <div className=\"description\">\n                        <div className=\"titleMovie row\">\n                            <h1>{props.movie.title}</h1>\n                            <h1>{props.movie.overview}</h1>\n                        </div>\n                        <p>Oscar winning movie</p>\n                        <div className=\"row\">\n                            <div>{props.movie.year}</div>\n                            <div>{props.movie.runtime}</div>\n                        </div>\n                        <p>{props.movie.description}</p>\n                    </div>\n                </div>\n            </div>}\n        </div>\n    )\n}\n","import MovieDetails from \".\"\nimport {useSelector} from \"react-redux\";\nimport {useParams} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const MovieDetailsContainer = (props) => {\n    let params = useParams();\n    const movie = useSelector(state => state.movies.movieList.find(movie => movie.id == params['id']))\n    return <MovieDetails movie={movie} logo={props.logo}/>\n}\n\n","import React from \"react\";\nimport \"./styles.scss\"\nimport Footer from \"./components/footer\";\nimport Logo from \"./components/logo\";\nimport NotFound from \"./components/erros/404\";\nimport HeaderContainer from \"./components/header/HeaderContainer\";\nimport MovieListContainer from \"./components/movieList/MovieListContainer\";\nimport {MovieDetailsContainer} from \"./components/movieDetails/MovieDetailsContainer\";\nimport {Route} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <>\n            <Route exact path=\"/find-your-movie/\">\n                <HeaderContainer logo={<Logo />} />\n                <MovieListContainer />\n            </Route>\n            <Route path=\"/find-your-movie/film/:id\" component={MovieListContainer}>\n                <MovieDetailsContainer logo={<Logo />} />\n                <MovieListContainer />\n            </Route>\n            <Route path=\"/find-your-movie/search/:search\">\n                <HeaderContainer logo={<Logo />} />\n                <MovieListContainer />\n            </Route>\n            <Route path=\"/find-your-movie/not-found\" component={NotFound} />\n            <Footer>\n                <Logo />\n            </Footer>\n        </>\n    );\n}\n\nexport default App;","import { combineReducers } from 'redux';\n\nimport { moviesReducer } from './movies-reducer';\n\nconst rootReducer = combineReducers({\n  movies: moviesReducer,\n});\n\nexport default rootReducer;\n","import {applyMiddleware, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport rootReducer from '../modules';\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./modules/configureStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <Provider store={store}>\n              <App />\n          </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}